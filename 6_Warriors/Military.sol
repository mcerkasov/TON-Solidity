
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

// This is class that describes you smart contract.
import "Interface.sol";
import "GameObject.sol";

contract Military is GameObject {

    constructor() public {
        // check that contract's public key is set
        require(tvm.pubkey() != 0, 101);
        // Check that message has signature (msg.pubkey() is not zero) and message is signed with the owner's private key
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();
    }

    // Вызов метода "Базовой Станции" "Добавить военный юнит на базу"
    function addMilitaryToBaseStation(InterfaceBaseStation BaseStation) public checkOwnerAndAccept {
        BaseStation.addMilitaryToBaseStation(unit);
    }

    // Атаковать
    function attack(InterfaceGameObject enemyAddr) public checkOwnerAndAccept{
        uint attPower = unit.attackPower;
        enemyAddr.acceptAttack(attPower);
    }

    // Получить силу атаки
    function getAttackPower(uint attPower) public checkOwnerAndAccept{
        myAttackPower = attPower;
    }

    // Обработка гибели юнита (вызов метода самоуничтожения + удалить военный юнит из базовой станции)
    function destroyAndRemoveMilitary(InterfaceBaseStation BaseStation) public checkOwnerAndAccept {
        sendingMoneyAndDestroying(unit, BaseStation, award);
        BaseStation.removeMilitary(unit.addrMillitary);
    }
}